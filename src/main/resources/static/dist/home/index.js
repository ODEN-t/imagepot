/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/*!****************************************************!*\
  !*** ./src/main/resources/static/js/home/index.js ***!
  \****************************************************/
eval("// import * as module from '../module/index';\r\n//\r\n//\r\n// document.addEventListener('DOMContentLoaded', () => {\r\n//     const wrapperTemplate = `<div class=\"p-home__postedItem js-intersect\"></div>`;\r\n//     const childTemplate = `<figure><div class=\"p-home__postedImg\"></div></figure>`;\r\n//     const UNIT = 15; // 一度にrenderする画像の数\r\n//     module.WrapNodesInEachUnit(module.generateImageTemplateList(childTemplate, urlList.length), UNIT, wrapperTemplate);\r\n//\r\n//     const options = {\r\n//         root: null,\r\n//         rootMargin: '0px',\r\n//         threshold: 0.25\r\n//     };\r\n//\r\n//     const intersectionObserver = new IntersectionObserver(renderImage, options);\r\n//     document.querySelectorAll('.js-intersect').forEach((e) => {\r\n//         intersectionObserver.observe(e);\r\n//     });\r\n//\r\n//     // IntersectionObserverのメインロジック\r\n//     // スクロール毎にimgタグを生成し画像を表示\r\n//     function renderImage(entries) {\r\n//         entries.forEach(entry => {\r\n//             if (entry.isIntersecting) {\r\n//                 let parent = entry.target;\r\n//                 let children = parent.querySelectorAll('.p-home__postedImg');\r\n//                 let count = 0;\r\n//                 for (let i = 0; i < children.length; i++) {\r\n//                     const img = document.createElement('img');\r\n//                     img.src = urlList[i];\r\n//                     children[i].appendChild(img);\r\n//                     img.addEventListener('load', () => {\r\n//                         urlList.shift();\r\n//                         count++;\r\n//                         if (count === children.length)\r\n//                             parent.classList.add('is-loaded');\r\n//                     });\r\n//                 }\r\n//                 intersectionObserver.unobserve(entry.target);\r\n//             }\r\n//         })\r\n//     }\r\n// });\r\n\r\n\n\n//# sourceURL=webpack://imagepot/./src/main/resources/static/js/home/index.js?");
/******/ })()
;